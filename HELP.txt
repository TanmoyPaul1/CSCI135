
//Directory
cd /mnt/c/Users/'Tanmoy Paul'/Documents/GitHub/CSCI135
fall-2020-135-lab-04-TanmoyPaul1

//Begin
#include <iostream>

int main()
{

//GitHub
g++ -o name fileName						    -compiles and makes output file: name
g++ -c fileName								    	-compiles and makes object file: fileName.o
./name												    	-runs output file called name
git add	
git commit -m ""
git push -u origin master

//Commands
std::cout <<  << std::endl;
std::cin >>
getline(std::cin, stringName)				-gets entire line, used for sentences
getline(ifstream, stringName)				-gets input from if stream
if (condition1) {...}
else if (condition2) {...}
else {}
while (int i=0; i < x; i++) {...}
while (x--)
do{...														  -does the statements first, then checks conditions
}while (condition);
switch (condition) {								-different cases of if loops
  case #:
    break;
  default:
    break;  }
func(int &variable)								  -& lets you change the actual variable value
std::cout << &variable;						  -& can be used to print memory address

return (condition ? result_if_true : result_if_false)

//#include <string>
std::string	 str = "";
str.length()											  -gives length of str
str.substr(index, length)						-substrings str at index for length units
str1 += str2											  -adds str2 to str1

str.replace(index, length, string)
std::isspace(char)									-used to check if a char is a space
std::cerr <<											  -method of outputting used for errors

//#include <vector>							    -basically better array
std::vector<int/char> name={...};		-declares name vector with ... values
name.push_back(x);								  -adds x to end of vector 
name.pop_back(x);								    -removes x from end of vector 
.size();													  -returns size of the vector

//Arrays
int arr [#]= {...};									-declares array arr # units long
char ch[#]={...};										-can input strings below # length
arr[2] = #;											    -inputs # in the 3rd place in the array
sizeof(arr)												  -outputs size of array arr

//#include <cctype>
isalpha(c) 	  	                    -Checks if character c is alphabetic,
isdigit(c) 	  	                    -Checks if character c is decimal digit,
isspace(c) 	  	                    -Checks if character c is a white-space.

//#include <cstdlib>
//#include <ctime>
int randomNum = rand();             -returns num from 0.0 to RAND_MAX
srand((unsigned) time(0));          -need this to get new random each time 
int randomNum = rand() % 5 + 1;     -random number between 1 and 5, inclusive


//#include <fstream>
std::ifstream stream1;							-creates an input stream
std::ofstream stream2;              -creates an output stream
stream0.open("file.txt");						-creates an (in)output stream from file.txt
std::ifstream stream1("file.txt");	-two steps in one
stream1 >> x;										    -inserts stream1 values into x
stream2 << "message\n";             -Writes the messages into the file 
if (stream1.fail()) {...}						-tests if the input stream is valid
while(!stream1.eof()) {...}					-until end of stream1, do ...
exit(0);													  -Used to terminate program
exit(1);													  -0 is for sucess, anything else for failure

//#include <cmath>							    -common math functions(algebra, trig, etc)

//#include <iomanip>
cout << fixed << setprecision(#);		-cout uses # digits after the decimal point
cout << setw(#) << variable;				-outputs # spaces above length of variable 


//UNIX commands
pwd														      -prints what directory you're in
cd ../Directory										  -move back and into a diff directory
cp file1 file2											-copies file1 and names it file2
mv file1 file2										  -renames file1 to file2
touch newfilename								    -creates new file
rm file													    -removes file
mkdir newdirectoryname					    -creates new directory
clear														    -cleans terminal
^claer^clear									    	-fixes previous typo
./name < TextFile.txt						  	-input is taken from txt file instead of keyboard
cat file.txt												-prints out everything in the txt file
head -# file.txt										-prints out # number of lines in txt file
tail -# file.txt										-prints out # line from the bottom

//Makefile
targets : prerequisities						-targets are file names
   @command									      	-prerequisites are files needed for target to run
   @command										      	and can be other targets which will run first
   @command									      	-commands are a series of steps to execute
   @echo This line is long, so \		-echo prints a message
		it's in multiple lines	      	- "\" breaks a long command

variable= fileNames							    -declare variables
$(variable)										    	-use variables in commands

targetOne targetTwo:						   	-multiple targets possible with same commands 
all: fileOne fileTwo fileThree			-running multiple targets
.PHONY: all											

clean:													    -clean file should always exist
	@rm -f fileNames						    	-deletes files so they can be used again

//Objects
std::string											  	-one word input
char												    		-single character
int												      		-integer between -2147483648 to 2147483647
double
long double
const												      	-permanent value
bool

// ssh-rsa key
cat ~/.ssh/id_rsa.pub

~/.bashrc

/*Other Commands*/


